#!/usr/bin/env lua

require 'zebra.core.zebra'

local help_description = [[

      .""\\\ _,
    ,_\\_\\\//|,
     \/; `:|( / \,
     /.';_`) `\////,
    |:'/a/ ':..:\/  /,
   /:' ` ':. '::'`\///,
  /_.:'`': ':/:' .:\/  \
 /  ',:'; :_/:' .:' \ //,
 |O)  \//` \:' .::' ;:\//,
 '.__.'`   |' .::' .;:://'.
           | .::' .::' `\ //.
          /.::' .::'  .:'`-;/
         |.::'  .:'  .:'  :'`

ZEBRA v]] .. Zebra.version .. [[, a JSON-API web framework.

Usage: zebra COMMAND [ARGS]

The available zebra commands are:
 new [name]             Create a new Zebra application
 start                  Starts the Zebra server
 stop                   Stops the Zebra server
 generate migration     Create a new SQL migration
 migrate                Run all SQL migrations that have not been run
 migrate rollback       Rollback one SQL migration
]]

local launcher = require 'zebra.cli.launcher'
local application = require 'zebra.cli.application'
local sql_migrations = require 'zebra.cli.sql_migrations'

if arg[1] == 'new' and arg[2] then application.new(arg[2])
elseif arg[1] == 'start' then launcher.start()
elseif arg[1] == 'stop' then launcher.stop()
elseif arg[1] == 'generate' and arg[2] == 'migration' then sql_migrations.new()
elseif arg[1] == 'migrate' and arg[2] == nil then sql_migrations.migrate()
elseif arg[1] == 'migrate' and arg[2] == "rollback" then sql_migrations.rollback()
else print(help_description)
end
